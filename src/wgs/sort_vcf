#! /bin/bash

source usage_functions
source check_functions

set -o errexit

DICT_FILE=Null
VCF_FILE=Null
VERSION_LOG=""
ARGNUM=$#

for (( i=1; i<=ARGNUM; i++ )); do
  OPTARG=$((i+1))
  case "${!i}" in
    -d | --dict_file )
      check_args "${!OPTARG}" "${!i}" || exit 1
      DICT_FILE="${!OPTARG}"
      i=$((i+1))
      ;;
    -i | --vcf_file )
      check_args "${!OPTARG}" "${!i}" || exit 1
      VCF_FILE="${!OPTARG}"
      i=$((i+1))
      ;;
    --log )
      check_args "${!OPTARG}" "${!i}" || exit 1
      VERSION_LOG="${!OPTARG}"
      i=$((i+1))
      ;;
    -h | --help )
      usage_sort_vcf
      exit 0
      ;;
    * )
      echo "Invalid option: ${!i}" 1>&2
      exit 1
      ;;
  esac
done

MISSING_VOLUMES=()
EXIT_CODE=0

[[ ${DICT_FILE} != "Null" ]] || { echo "
ERROR: DICT_FILE (-d <arg>) argument must be provided" && \
 usage_sort_vcf && exit 1; }
[[ ${VCF_FILE} != "Null" ]] || { echo "
ERROR: VCF FILE (-i <arg>) argument must be provided" && \
 usage_sort_vcf && exit 1; }

[[ -d /data/ref_index ]] || { MISSING_VOLUMES+=(/data/ref_index) && EXIT_CODE=1; }
[[ -d /data/input_data ]] || { MISSING_VOLUMES+=(/data/input_data) && EXIT_CODE=1; }

if [[ ${EXIT_CODE} = 1 ]]; then
    echo "
    The following volumes are missing: ${MISSING_VOLUMES[@]}" && echo_usage && exit 1
fi

python /check_permissions.py /data/ref_index ReadWrite || exit 1
python /check_permissions.py /data/input_data ReadWrite || exit 1

VCF_FILE=/data/input_data/"$VCF_FILE" \
TMP_FILE=/tmp/"$(basename $VCF_FILE)" \

python /reconcile_vcf_with_dict.py "${VCF_FILE}" /data/ref_index/"${DICT_FILE}" "${TMP_FILE}"

picard SortVcf \
    I="${TMP_FILE}" \
    O="${VCF_FILE}" \
    SEQUENCE_DICTIONARY=/data/ref_index/"${DICT_FILE}"

rm "${VCF_FILE}.idx"
