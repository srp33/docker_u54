#! /bin/bash

source usage_functions
source check_functions

set -o errexit

REF_GENOME=Null
VERSION_LOG=""
ARGNUM=$#

for (( i=1; i<=ARGNUM; i++ )); do
  OPTARG=$((i+1))
  case ${!i} in
    -r | --reference )
      check_args "${!OPTARG}" "${!i}" || exit 1
      REF_GENOME="${!OPTARG}"
      i=$((i+1))
      ;;
    --log )
      check_args "${!OPTARG}" "${!i}" || exit 1
      VERSION_LOG="${!OPTARG}"
      i=$((i+1))
      ;;
    -h | --help )
      usage_index_fasta
      exit 0
      ;;
    * )
      echo "Invalid option: ${!i}" 1>&2
      exit 1
      ;;
  esac
done

[[ ${REF_GENOME} != "Null" ]] || { echo "
ERROR: REF_GENOME (-r <arg>) argument must be provided" && \
 usage_index_fasta && exit 1; }

EXIT_CODE=0
MISSING_VOLUMES=()

[[ -d ref_genome ]] || { MISSING_VOLUMES+=(ref_genome) && EXIT_CODE=1; }
[[ -d output_data ]] || { MISSING_VOLUMES+=(output_data) && EXIT_CODE=1; }

if [[ ${EXIT_CODE} = 1 ]]; then
    echo "
    The following volumes are missing: ${MISSING_VOLUMES[@]}" && echo_usage && exit 1
fi

# Check permissions of each directory

python /check_permissions.py ref_genome Read "${REF_GENOME}" || exit 1
python /check_permissions.py output_data ReadWrite || exit 1

REF_GENOME_PATH=/tmp/ref.fa

if file --mime-type "/data/ref_genome/${REF_GENOME}" | grep -q gzip$
then
  gunzip -c "/data/ref_genome/${REF_GENOME}" >${REF_GENOME_PATH}
  OUTPUT_PREFIX=$(get_file_without_extension ${REF_GENOME})
else
  ln -s "/data/ref_genome/${REF_GENOME}" ${REF_GENOME_PATH}
  OUTPUT_PREFIX=${REF_GENOME}
fi

bwa index -a bwtsw ${REF_GENOME_PATH}
samtools faidx ${REF_GENOME_PATH}
picard CreateSequenceDictionary REFERENCE=${REF_GENOME_PATH} OUTPUT=${REF_GENOME_PATH}.dict

REF_INDEX_FILES=("${REF_GENOME_PATH}".amb "${REF_GENOME_PATH}".ann "${REF_GENOME_PATH}".bwt "${REF_GENOME_PATH}".pac "${REF_GENOME_PATH}".sa "${REF_GENOME_PATH}".fai)
for REF_INDEX_FILE in ${REF_INDEX_FILES[@]}; do
    REF_INDEX_FILE_EXTENSION="$(get_file_extension ${REF_INDEX_FILE})"
    mv "${REF_INDEX_FILE}" /data/output_data/${OUTPUT_PREFIX}.${REF_INDEX_FILE_EXTENSION}
done

mv ${REF_GENOME_PATH}.dict /data/output_data/${OUTPUT_PREFIX/\.$(get_file_extension ${REF_GENOME_PATH})/}.dict 

if [[ ${VERSION_LOG} != "" ]]; then
  echo "Timestamp: $(date '+%d/%m/%Y %H:%M:%S')

$( get_bash_version )

$( get_python_version )

$( get_conda_version bwa )

$( get_conda_version samtools )

$( get_conda_version picard )
  " > /data/output_data/"${VERSION_LOG}"
fi
