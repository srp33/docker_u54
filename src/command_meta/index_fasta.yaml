description: Create index files from a reference genome (FASTA file). It uses bwa, samtools, and Picard to create index files.
args:
    - FASTA_FILE:
        opts: "-r | --reference"
        description: "Name of the reference genome FASTA file."
        example: "-r hg19.fa"
volumes:
    - ref_dir:
        description: "Directory where the reference genome FASTA file and indices are stored."
        write_access: True
command_template: |
    FASTA_FILE_PATH=/tmp/ref.fa

    if file --mime-type "/volumes/ref_dir/${FASTA_FILE}" | grep -q gzip$
    then
      gunzip -c "/volumes/ref_dir/${FASTA_FILE}" >${FASTA_FILE_PATH}
      OUTPUT_FILE_PREFIX=$(get_file_without_extension ${FASTA_FILE})
    else
      ln -s "/volumes/ref_dir/${FASTA_FILE}" ${FASTA_FILE_PATH}
      OUTPUT_FILE_PREFIX=${FASTA_FILE}
    fi

    bwa index -a bwtsw ${FASTA_FILE_PATH}
    samtools faidx ${FASTA_FILE_PATH}
    picard CreateSequenceDictionary REFERENCE=${FASTA_FILE_PATH} OUTPUT_FILE=${FASTA_FILE_PATH}.dict

    REF_INDEX_FILES=("${FASTA_FILE_PATH}".amb "${FASTA_FILE_PATH}".ann "${FASTA_FILE_PATH}".bwt "${FASTA_FILE_PATH}".pac "${FASTA_FILE_PATH}".sa "${FASTA_FILE_PATH}".fai)
    for REF_INDEX_FILE in ${REF_INDEX_FILES[@]}; do
        REF_INDEX_FILE_EXTENSION="$(get_file_extension ${REF_INDEX_FILE})"
        mv "${REF_INDEX_FILE}" /volumes/ref_dir/${OUTPUT_FILE_PREFIX}.${REF_INDEX_FILE_EXTENSION}
    done

    mv ${FASTA_FILE_PATH}.dict /volumes/ref_dir/${OUTPUT_FILE_PREFIX/\.$(get_file_extension ${FASTA_FILE_PATH})/}.dict
receipt_commands: |
    get_bash_version
    get_python_version
    get_conda_version bwa
    get_conda_version samtools
    get_conda_version picard