description: Call structural variants using DELLY.
args:
    - FASTA_FILE:
        default: "Null"
        opts: "-r | --reference"
        description: "Name of the reference genome FASTA file."
        required: True
        example: "-r hg19.fa"
    - TUMOR_BAM_FILE:
        default: "Null"
        opts: "-m | --tumor_bam_file"
        description: "Path to a BAM file with tumor data. This file must have been sorted, indexed, and duplicate marked. \
bam file for every input sample.\""
        required: True
        example: "-m SampleA_Tumor.bam"
    - NORMAL_BAM_FILE:
        default: "Null"
        opts: "-n | --normal_bam_file"
        description: "Path to a BAM file with normal data. This file must have been sorted, indexed, and duplicate marked."
        required: True
        example: "-n SampleA_Normal.bam"
    - OUTPUT_FILE:
        default: "Null"
        opts: "-o | --output"
        description: "Name of the output VCF file."
        required: True
        example: "-o SampleA.vcf"
volumes:
    - ref_genome:
        description: "Directory where the reference genome FASTA file is stored."
        permissions: Read
    - ref_index:
        description: "Directory where the index files for the reference genome are stored."
        permissions: Read
    - bam_files:
        description: "Directory where the BAM file is stored."
        permissions: Read
    - output_data:
        description: "Directory where the output file will be stored."
        permissions: ReadWrite
command_template: |
    if [ ! -f /data/bam_files/"${TUMOR_BAM_FILE}.bai" ] then
      echo "ERROR: /data/bam_files/\"${TUMOR_BAM_FILE}.bai\" does not exist. Please run index_bam on /data/bam_files/\"${TUMOR_BAM_FILE}\"."
      exit 1;
    fi
    if [ ! -f /data/bam_files/"${NORMAL_BAM_FILE}.bai" ] then
      echo "ERROR: /data/bam_files/\"${NORMAL_BAM_FILE}.bai\" does not exist. Please run index_bam on /data/bam_files/\"${NORMAL_BAM_FILE}\"."
      exit 1;
    fi

    ln -s /data/ref_genome/"${FASTA_FILE}" /tmp/"${FASTA_FILE}"

    INDEX=$(echo "${FASTA_FILE}" | grep -o '\.' | grep -c '\.')
    if [[ "${FASTA_FILE: -${INDEX}}" = ".gz" ]]; then
        NEW_REF="$(echo ${FASTA_FILE} | cut -d '.' -f -${INDEX})"
        gunzip -c /data/ref_genome/"${FASTA_FILE}" > /tmp/"${NEW_REF}"
        FASTA_FILE="${NEW_REF}"
    fi

    NEEDED_FILE=/data/ref_index/"${FASTA_FILE}".fai

    if [[ ! -f "${NEEDED_FILE}" ]]; then
        echo "samtools reference index (${NEEDED_FILE}) is missing."
        exit 1
    fi

    ln -s /data/ref_index/"${FASTA_FILE}.fai" /tmp/"${FASTA_FILE}.fai"

    delly call -x hg19.excl -o /tmp/output.bcf -g /tmp/"${FASTA_FILE}" /data/bam_files/"$TUMOR_BAM_FILE" /data/bam_files/"$NORMAL_BAM_FILE"

    bcftools view /tmp/output.bcf > /data/output_data/"${OUTPUT_FILE}"
receipt_commands: |
    get_bash_version
    get_python2_version
    get_conda_version delly