description: Call structural variants using DELLY.
args:
    - REF_GENOME:
        default: "Null"
        opts: "-r | --reference"
        description: "Name of the reference genome FASTA file."
        required: True
        example: "-r hg19.fa"
    - TUMOR:
        default: "Null"
        opts: "-t | --tumor"
        description: "Path to a BAM file with tumor data. This file must have been sorted, indexed, and duplicate marked. \
bam file for every input sample.\""
        required: True
        example: "-t SampleA_Tumor.bam"
    - NORMAL:
        default: "Null"
        opts: "-n | --normal"
        description: "Path to a BAM file with normal data. This file must have been sorted, indexed, and duplicate marked."
        required: True
        example: "-n SampleA_Normal.bam"
    - OUTPUT:
        default: "Null"
        opts: "-o | --output"
        description: "Name of the output VCF file."
        required: True
        example: "-o SampleA.vcf"
volumes:
    - ref_genome:
        description: "Directory where the reference genome FASTA file is stored."
        permissions: Read
    - ref_index:
        description: "Directory where the index files for the reference genome are stored."
        permissions: Read
    - bam_files:
        description: "Directory where the BAM file is stored."
        permissions: Read
    - output_data:
        description: "Directory where the output file will be stored."
        permissions: ReadWrite
command_template: |
    if [ ! -f /data/bam_files/"${TUMOR}.bai" ] then
      echo "ERROR: /data/bam_files/\"${TUMOR}.bai\" does not exist. Please run index_bam on /data/bam_files/\"${TUMOR}\"."
      exit 1;
    fi
    if [ ! -f /data/bam_files/"${NORMAL}.bai" ] then
      echo "ERROR: /data/bam_files/\"${NORMAL}.bai\" does not exist. Please run index_bam on /data/bam_files/\"${NORMAL}\"."
      exit 1;
    fi

    ln -s /data/ref_genome/"${REF_GENOME}" /tmp/"${REF_GENOME}"

    INDEX=$(echo "${REF_GENOME}" | grep -o '\.' | grep -c '\.')
    if [[ "${REF_GENOME: -${INDEX}}" = ".gz" ]]; then
        NEW_REF="$(echo ${REF_GENOME} | cut -d '.' -f -${INDEX})"
        gunzip -c /data/ref_genome/"${REF_GENOME}" > /tmp/"${NEW_REF}"
        REF_GENOME="${NEW_REF}"
    fi

    NEEDED_FILE=/data/ref_index/"${REF_GENOME}".fai

    if [[ ! -f "${NEEDED_FILE}" ]]; then
        echo "samtools reference index (${NEEDED_FILE}) is missing."
        exit 1
    fi

    ln -s /data/ref_index/"${REF_GENOME}.fai" /tmp/"${REF_GENOME}.fai"

    delly call -x hg19.excl -o /tmp/output.bcf -g /tmp/"${REF_GENOME}" /data/bam_files/"$TUMOR" /data/bam_files/"$NORMAL"

    bcftools view /tmp/output.bcf > /data/output_data/"${OUTPUT}"
receipt_commands: |
    get_bash_version
    get_python2_version
    get_conda_version delly