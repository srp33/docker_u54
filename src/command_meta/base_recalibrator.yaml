description: Detect systematic errors in base quality scores for a BAM file.
args:
    - FASTA_FILE:
        default: "Null"
        opts: "-r | --reference"
        description: "Name of the reference genome FASTA file."
        example: "-r hg19.fa"
    - KNOWN_SITES_FILE:
        default: "()"
        opts: "-k | --known_sites_file"
        description: "Path to VCF file with known polymorphic sites> (may be listed more than once)."
        example: "-k dbsnp_146.hg19.vcf"
    - INPUT_BAM_FILE:
        default: "Null"
        opts: "-i | --input"
        description: "Name of the input BAM file."
        example: "-i SampleA.bam"
    - OUTPUT_BAM_FILE:
        default: "Null"
        opts: "-o | --output"
        description: "Name of the output BAM file."
        required: False
        example: "-o SampleA.bam"
    - THREADS:
        default: 1
        opts: "-t | --nthreads"
        description: "The number of threads that GATK should use."
        required: False
        example: "-t 4"
volumes:
    - ref_dir:
        description: "Directory where the reference genome FASTA file and indices are stored."
        permissions: Read
    - input_bam_dir:
        description: "Directory where the input BAM file is stored."
        permissions: Read
    - vcf_dir:
        description: "Directory where the recalibration VCF file(s) are stored."
        permissions: Read
    - output_bam_dir:
        description: "Directory where the output BAM file will be stored."
        permissions: ReadWrite
command_template: |
    if [[ "$OUTPUT_BAM_FILE" == "Null"]]
    then
        OUTPUT_BAM_FILE="$INPUT_BAM_FILE"
    fi

    ln -s /data/ref_dir/"${FASTA_FILE}" /tmp/"${FASTA_FILE}"

    INDEX=$(echo "${FASTA_FILE}" | grep -o '\.' | grep -c '\.')
    if [[ ${FASTA_FILE: -${INDEX}} = ".gz" ]]; then
        NEW_REF="$(echo ${FASTA_FILE} | cut -d '.' -f -${INDEX})"
        gunzip -c /data/ref_dir/"${FASTA_FILE}" > /tmp/"${NEW_REF}"
        FASTA_FILE="${NEW_REF}"
        INDEX=$(echo "${FASTA_FILE}" | grep -o '\.' | grep -c '\.')
    fi

    NEEDED_INDEX=/data/ref_dir/"${FASTA_FILE}".fai
    REF_DICT="$(echo ${FASTA_FILE} | cut -d '.' -f -${INDEX})".dict
    NEEDED_DICT=/data/ref_dir/"${REF_DICT}"

    if [[ ! -f "${NEEDED_INDEX}" ]]; then
        echo "Samtools reference index (${NEEDED_INDEX}) is missing."
        exit 1
    fi

    ln -s /data/ref_dir/"${FASTA_FILE}.fai" /tmp/"${FASTA_FILE}.fai"

    if [[ ! -f ${NEEDED_DICT} ]]; then
        echo "Fasta dict file (${NEEDED_DICT}) is missing."
        exit 1
    fi

    ln -s /data/ref_dir/"${REF_DICT}" /tmp/"${REF_DICT}"

    KNOWN_SITE_COMMANDS=()
    for KNOWN_SITE_FILE in ${KNOWN_SITES_FILE[@]}; do
        if [[ ! -f /data/vcf_dir/"${KNOWN_SITE_FILE}.idx" ]]; then
            gatk IndexFeatureFile -F /data/vcf_dir/"${KNOWN_SITE_FILE}"
        fi
        KNOWN_SITE_COMMANDS+=("--knownSites /data/vcf_dir/${KNOWN_SITE_FILE}")
    done

    gatk3 -Xms512m -Xmx8g -T BaseRecalibrator \
      -R /tmp/"${FASTA_FILE}" \
      -I /data/input_bam_dir/"${INPUT_BAM_FILE}" \
      ${KNOWN_SITE_COMMANDS[@]} \
      -o /data/output_bam_dir/"${OUTPUT_BAM_FILE}" \
      -nct ${THREADS}
receipt_commands: |
    get_bash_version
    gatk3 --version