description: Detect systematic errors in base quality scores for a BAM file.
args:
    - FASTA_FILE:
        opts: "-r | --reference"
        description: "Name of the reference genome FASTA file."
        example: "hg19.fa"
    - KNOWN_SITES_FILE:
        opts: "-k | --known_sites_file"
        description: "Path to VCF file with known polymorphic sites."
        example: "dbsnp_146.hg19.vcf"
        allow_multiple: True
        min_required: 1
    - INPUT_BAM_FILE:
        opts: "-i | --input"
        description: "Name of the input BAM file."
        example: "SampleA.bam"
    - OUTPUT_BAM_FILE:
        opts: "-o | --output"
        description: "Name of the output BAM file. If no value is specified, the output file will have the same name as the input file."
        default: "Null"
        example: "SampleA.bam"
    - THREADS:
        opts: "-t | --nthreads"
        description: "The number of threads that GATK should use. Default is 1."
        default: 1
        example: "4"
volumes:
    - ref_dir:
        description: "Directory where the reference genome FASTA file and indices are stored."
    - input_bam_dir:
        description: "Directory where the input BAM file is stored."
    - vcf_dir:
        description: "Directory where the recalibration VCF file(s) are stored."
    - output_bam_dir:
        description: "Directory where the output BAM file will be stored."
        write_access: True
command_template: |
    if [[ "$OUTPUT_BAM_FILE" == "Null"]]
    then
        OUTPUT_BAM_FILE="$INPUT_BAM_FILE"
    fi

    ln -s /volumes/ref_dir/"${FASTA_FILE}" /tmp/"${FASTA_FILE}"

    INDEX=$(echo "${FASTA_FILE}" | grep -o '\.' | grep -c '\.')
    if [[ ${FASTA_FILE: -${INDEX}} = ".gz" ]]; then
        NEW_REF="$(echo ${FASTA_FILE} | cut -d '.' -f -${INDEX})"
        gunzip -c /volumes/ref_dir/"${FASTA_FILE}" > /tmp/"${NEW_REF}"
        FASTA_FILE="${NEW_REF}"
        INDEX=$(echo "${FASTA_FILE}" | grep -o '\.' | grep -c '\.')
    fi

    NEEDED_INDEX=/volumes/ref_dir/"${FASTA_FILE}".fai
    REF_DICT="$(echo ${FASTA_FILE} | cut -d '.' -f -${INDEX})".dict
    NEEDED_DICT=/volumes/ref_dir/"${REF_DICT}"

    if [[ ! -f "${NEEDED_INDEX}" ]]; then
        echo "Samtools reference index (${NEEDED_INDEX}) is missing."
        exit 1
    fi

    ln -s /volumes/ref_dir/"${FASTA_FILE}.fai" /tmp/"${FASTA_FILE}.fai"

    if [[ ! -f ${NEEDED_DICT} ]]; then
        echo "Fasta dict file (${NEEDED_DICT}) is missing."
        exit 1
    fi

    ln -s /volumes/ref_dir/"${REF_DICT}" /tmp/"${REF_DICT}"

    KNOWN_SITES_COMMANDS=()
    for KS_FILE in ${KNOWN_SITES_FILE[@]}; do
        if [[ ! -f /volumes/vcf_dir/"${KS_FILE}.idx" ]]; then
            gatk IndexFeatureFile -F /volumes/vcf_dir/"${KS_FILE}"
        fi
        KNOWN_SITES_COMMANDS+=("--knownSites /volumes/vcf_dir/${KS_FILE}")
    done

    gatk3 -Xms512m -Xmx8g -T BaseRecalibrator \
      -R /tmp/"${FASTA_FILE}" \
      -I /volumes/input_bam_dir/"${INPUT_BAM_FILE}" \
      ${KNOWN_SITES_COMMANDS[@]} \
      -o /volumes/output_bam_dir/"${OUTPUT_BAM_FILE}" \
      -nct ${THREADS}
receipt_commands: |
    get_bash_version
    gatk3 --version